FIRRTL version 1.2.0
circuit VendingMachine :
  module VendingMachine :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip price : UInt<5>, flip coin2 : UInt<1>, flip coin5 : UInt<1>, flip buy : UInt<1>, releaseCan : UInt<1>, alarm : UInt<1>, seg : UInt<7>, an : UInt<4>} @[\\src\\main\\scala\\VendingMachine.scala 5:14]

    wire sevSeg : UInt @[\\src\\main\\scala\\VendingMachine.scala 16:27]
    sevSeg <= UInt<1>("h0") @[\\src\\main\\scala\\VendingMachine.scala 16:27]
    sevSeg <= UInt<7>("h7f") @[\\src\\main\\scala\\VendingMachine.scala 19:10]
    io.alarm <= UInt<1>("h0") @[\\src\\main\\scala\\VendingMachine.scala 21:12]
    io.releaseCan <= UInt<1>("h0") @[\\src\\main\\scala\\VendingMachine.scala 22:17]
    reg stateReg : UInt<3>, clock with :
      reset => (reset, UInt<1>("h0")) @[\\src\\main\\scala\\VendingMachine.scala 30:25]
    reg boughtReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[\\src\\main\\scala\\VendingMachine.scala 31:26]
    node _T = asUInt(UInt<1>("h0")) @[\\src\\main\\scala\\VendingMachine.scala 33:20]
    node _T_1 = asUInt(stateReg) @[\\src\\main\\scala\\VendingMachine.scala 33:20]
    node _T_2 = eq(_T, _T_1) @[\\src\\main\\scala\\VendingMachine.scala 33:20]
    when _T_2 : @[\\src\\main\\scala\\VendingMachine.scala 33:20]
      when io.coin2 : @[\\src\\main\\scala\\VendingMachine.scala 35:22]
        stateReg <= UInt<1>("h1") @[\\src\\main\\scala\\VendingMachine.scala 36:18]
      else :
        when io.coin5 : @[\\src\\main\\scala\\VendingMachine.scala 37:28]
          stateReg <= UInt<2>("h3") @[\\src\\main\\scala\\VendingMachine.scala 38:18]
        else :
          when io.buy : @[\\src\\main\\scala\\VendingMachine.scala 39:26]
            stateReg <= UInt<3>("h5") @[\\src\\main\\scala\\VendingMachine.scala 40:18]
    else :
      node _T_3 = asUInt(UInt<1>("h1")) @[\\src\\main\\scala\\VendingMachine.scala 33:20]
      node _T_4 = asUInt(stateReg) @[\\src\\main\\scala\\VendingMachine.scala 33:20]
      node _T_5 = eq(_T_3, _T_4) @[\\src\\main\\scala\\VendingMachine.scala 33:20]
      when _T_5 : @[\\src\\main\\scala\\VendingMachine.scala 33:20]
        when io.coin2 : @[\\src\\main\\scala\\VendingMachine.scala 45:22]
          stateReg <= UInt<2>("h2") @[\\src\\main\\scala\\VendingMachine.scala 46:18]
        else :
          node _T_6 = eq(io.coin2, UInt<1>("h0")) @[\\src\\main\\scala\\VendingMachine.scala 47:18]
          when _T_6 : @[\\src\\main\\scala\\VendingMachine.scala 47:29]
            stateReg <= UInt<1>("h0") @[\\src\\main\\scala\\VendingMachine.scala 48:18]
      else :
        node _T_7 = asUInt(UInt<2>("h2")) @[\\src\\main\\scala\\VendingMachine.scala 33:20]
        node _T_8 = asUInt(stateReg) @[\\src\\main\\scala\\VendingMachine.scala 33:20]
        node _T_9 = eq(_T_7, _T_8) @[\\src\\main\\scala\\VendingMachine.scala 33:20]
        when _T_9 : @[\\src\\main\\scala\\VendingMachine.scala 33:20]
          node _T_10 = eq(io.coin2, UInt<1>("h0")) @[\\src\\main\\scala\\VendingMachine.scala 53:12]
          when _T_10 : @[\\src\\main\\scala\\VendingMachine.scala 53:23]
            stateReg <= UInt<1>("h0") @[\\src\\main\\scala\\VendingMachine.scala 54:18]
        else :
          node _T_11 = asUInt(UInt<2>("h3")) @[\\src\\main\\scala\\VendingMachine.scala 33:20]
          node _T_12 = asUInt(stateReg) @[\\src\\main\\scala\\VendingMachine.scala 33:20]
          node _T_13 = eq(_T_11, _T_12) @[\\src\\main\\scala\\VendingMachine.scala 33:20]
          when _T_13 : @[\\src\\main\\scala\\VendingMachine.scala 33:20]
            when io.coin5 : @[\\src\\main\\scala\\VendingMachine.scala 59:22]
              stateReg <= UInt<3>("h4") @[\\src\\main\\scala\\VendingMachine.scala 60:18]
            else :
              node _T_14 = eq(io.coin5, UInt<1>("h0")) @[\\src\\main\\scala\\VendingMachine.scala 61:18]
              when _T_14 : @[\\src\\main\\scala\\VendingMachine.scala 61:29]
                stateReg <= UInt<1>("h0") @[\\src\\main\\scala\\VendingMachine.scala 62:18]
          else :
            node _T_15 = asUInt(UInt<3>("h4")) @[\\src\\main\\scala\\VendingMachine.scala 33:20]
            node _T_16 = asUInt(stateReg) @[\\src\\main\\scala\\VendingMachine.scala 33:20]
            node _T_17 = eq(_T_15, _T_16) @[\\src\\main\\scala\\VendingMachine.scala 33:20]
            when _T_17 : @[\\src\\main\\scala\\VendingMachine.scala 33:20]
              node _T_18 = eq(io.coin5, UInt<1>("h0")) @[\\src\\main\\scala\\VendingMachine.scala 67:12]
              when _T_18 : @[\\src\\main\\scala\\VendingMachine.scala 67:23]
                stateReg <= UInt<1>("h0") @[\\src\\main\\scala\\VendingMachine.scala 68:18]
            else :
              node _T_19 = asUInt(UInt<3>("h5")) @[\\src\\main\\scala\\VendingMachine.scala 33:20]
              node _T_20 = asUInt(stateReg) @[\\src\\main\\scala\\VendingMachine.scala 33:20]
              node _T_21 = eq(_T_19, _T_20) @[\\src\\main\\scala\\VendingMachine.scala 33:20]
              when _T_21 : @[\\src\\main\\scala\\VendingMachine.scala 33:20]
                when io.buy : @[\\src\\main\\scala\\VendingMachine.scala 73:20]
                  stateReg <= UInt<3>("h6") @[\\src\\main\\scala\\VendingMachine.scala 74:18]
              else :
                node _T_22 = asUInt(UInt<3>("h6")) @[\\src\\main\\scala\\VendingMachine.scala 33:20]
                node _T_23 = asUInt(stateReg) @[\\src\\main\\scala\\VendingMachine.scala 33:20]
                node _T_24 = eq(_T_22, _T_23) @[\\src\\main\\scala\\VendingMachine.scala 33:20]
                when _T_24 : @[\\src\\main\\scala\\VendingMachine.scala 33:20]
                  node _T_25 = eq(io.buy, UInt<1>("h0")) @[\\src\\main\\scala\\VendingMachine.scala 79:12]
                  when _T_25 : @[\\src\\main\\scala\\VendingMachine.scala 79:21]
                    boughtReg <= UInt<1>("h0") @[\\src\\main\\scala\\VendingMachine.scala 80:19]
                    stateReg <= UInt<1>("h0") @[\\src\\main\\scala\\VendingMachine.scala 81:18]
    wire coinValue : UInt<4> @[\\src\\main\\scala\\VendingMachine.scala 86:30]
    coinValue <= UInt<4>("h0") @[\\src\\main\\scala\\VendingMachine.scala 86:30]
    node _T_26 = asUInt(UInt<1>("h1")) @[\\src\\main\\scala\\VendingMachine.scala 87:20]
    node _T_27 = asUInt(stateReg) @[\\src\\main\\scala\\VendingMachine.scala 87:20]
    node _T_28 = eq(_T_26, _T_27) @[\\src\\main\\scala\\VendingMachine.scala 87:20]
    when _T_28 : @[\\src\\main\\scala\\VendingMachine.scala 87:20]
      coinValue <= UInt<2>("h2") @[\\src\\main\\scala\\VendingMachine.scala 88:28]
    else :
      node _T_29 = asUInt(UInt<2>("h2")) @[\\src\\main\\scala\\VendingMachine.scala 87:20]
      node _T_30 = asUInt(stateReg) @[\\src\\main\\scala\\VendingMachine.scala 87:20]
      node _T_31 = eq(_T_29, _T_30) @[\\src\\main\\scala\\VendingMachine.scala 87:20]
      when _T_31 : @[\\src\\main\\scala\\VendingMachine.scala 87:20]
        coinValue <= UInt<1>("h0") @[\\src\\main\\scala\\VendingMachine.scala 89:32]
      else :
        node _T_32 = asUInt(UInt<2>("h3")) @[\\src\\main\\scala\\VendingMachine.scala 87:20]
        node _T_33 = asUInt(stateReg) @[\\src\\main\\scala\\VendingMachine.scala 87:20]
        node _T_34 = eq(_T_32, _T_33) @[\\src\\main\\scala\\VendingMachine.scala 87:20]
        when _T_34 : @[\\src\\main\\scala\\VendingMachine.scala 87:20]
          coinValue <= UInt<3>("h5") @[\\src\\main\\scala\\VendingMachine.scala 90:28]
        else :
          node _T_35 = asUInt(UInt<3>("h4")) @[\\src\\main\\scala\\VendingMachine.scala 87:20]
          node _T_36 = asUInt(stateReg) @[\\src\\main\\scala\\VendingMachine.scala 87:20]
          node _T_37 = eq(_T_35, _T_36) @[\\src\\main\\scala\\VendingMachine.scala 87:20]
          when _T_37 : @[\\src\\main\\scala\\VendingMachine.scala 87:20]
            coinValue <= UInt<1>("h0") @[\\src\\main\\scala\\VendingMachine.scala 91:32]
    reg sumReg : UInt<6>, clock with :
      reset => (reset, UInt<6>("h0")) @[\\src\\main\\scala\\VendingMachine.scala 94:23]
    node _sumReg_T = eq(stateReg, UInt<3>("h5")) @[\\src\\main\\scala\\VendingMachine.scala 95:44]
    node _sumReg_T_1 = and(io.releaseCan, _sumReg_T) @[\\src\\main\\scala\\VendingMachine.scala 95:31]
    node _sumReg_T_2 = sub(sumReg, io.price) @[\\src\\main\\scala\\VendingMachine.scala 95:63]
    node _sumReg_T_3 = tail(_sumReg_T_2, 1) @[\\src\\main\\scala\\VendingMachine.scala 95:63]
    node _sumReg_T_4 = add(sumReg, coinValue) @[\\src\\main\\scala\\VendingMachine.scala 95:82]
    node _sumReg_T_5 = tail(_sumReg_T_4, 1) @[\\src\\main\\scala\\VendingMachine.scala 95:82]
    node _sumReg_T_6 = mux(_sumReg_T_1, _sumReg_T_3, _sumReg_T_5) @[\\src\\main\\scala\\VendingMachine.scala 95:16]
    sumReg <= _sumReg_T_6 @[\\src\\main\\scala\\VendingMachine.scala 95:10]
    node _T_38 = eq(stateReg, UInt<3>("h5")) @[\\src\\main\\scala\\VendingMachine.scala 97:35]
    node _T_39 = and(io.releaseCan, _T_38) @[\\src\\main\\scala\\VendingMachine.scala 97:22]
    when _T_39 : @[\\src\\main\\scala\\VendingMachine.scala 97:47]
      boughtReg <= UInt<1>("h1") @[\\src\\main\\scala\\VendingMachine.scala 98:15]
    node sumGreaterThanPrice = geq(sumReg, io.price) @[\\src\\main\\scala\\VendingMachine.scala 101:36]
    node _io_releaseCan_T = or(sumGreaterThanPrice, boughtReg) @[\\src\\main\\scala\\VendingMachine.scala 103:50]
    node _io_releaseCan_T_1 = and(io.buy, _io_releaseCan_T) @[\\src\\main\\scala\\VendingMachine.scala 103:27]
    io.releaseCan <= _io_releaseCan_T_1 @[\\src\\main\\scala\\VendingMachine.scala 103:17]
    node _io_alarm_T = not(boughtReg) @[\\src\\main\\scala\\VendingMachine.scala 104:15]
    node _io_alarm_T_1 = xor(io.buy, io.releaseCan) @[\\src\\main\\scala\\VendingMachine.scala 104:36]
    node _io_alarm_T_2 = and(_io_alarm_T, _io_alarm_T_1) @[\\src\\main\\scala\\VendingMachine.scala 104:26]
    io.alarm <= _io_alarm_T_2 @[\\src\\main\\scala\\VendingMachine.scala 104:12]
    node secondPriceDigit = div(io.price, UInt<4>("ha")) @[\\src\\main\\scala\\VendingMachine.scala 106:35]
    node _firstPriceDigit_T = mul(secondPriceDigit, UInt<4>("ha")) @[\\src\\main\\scala\\VendingMachine.scala 107:54]
    node _firstPriceDigit_T_1 = sub(io.price, _firstPriceDigit_T) @[\\src\\main\\scala\\VendingMachine.scala 107:34]
    node firstPriceDigit = tail(_firstPriceDigit_T_1, 1) @[\\src\\main\\scala\\VendingMachine.scala 107:34]
    node secondSumDigit = div(sumReg, UInt<4>("ha")) @[\\src\\main\\scala\\VendingMachine.scala 109:31]
    node _firstSumDigit_T = mul(secondSumDigit, UInt<4>("ha")) @[\\src\\main\\scala\\VendingMachine.scala 110:48]
    node _firstSumDigit_T_1 = sub(sumReg, _firstSumDigit_T) @[\\src\\main\\scala\\VendingMachine.scala 110:30]
    node firstSumDigit = tail(_firstSumDigit_T_1, 1) @[\\src\\main\\scala\\VendingMachine.scala 110:30]
    reg cntReg : UInt<50>, clock with :
      reset => (reset, UInt<50>("h0")) @[\\src\\main\\scala\\VendingMachine.scala 112:24]
    reg segReg : UInt<8>, clock with :
      reset => (reset, UInt<8>("h0")) @[\\src\\main\\scala\\VendingMachine.scala 113:24]
    node _cntReg_T = add(cntReg, UInt<1>("h1")) @[\\src\\main\\scala\\VendingMachine.scala 114:20]
    node _cntReg_T_1 = tail(_cntReg_T, 1) @[\\src\\main\\scala\\VendingMachine.scala 114:20]
    cntReg <= _cntReg_T_1 @[\\src\\main\\scala\\VendingMachine.scala 114:10]
    node _T_40 = eq(cntReg, UInt<17>("h1869f")) @[\\src\\main\\scala\\VendingMachine.scala 115:15]
    when _T_40 : @[\\src\\main\\scala\\VendingMachine.scala 115:33]
      cntReg <= UInt<1>("h0") @[\\src\\main\\scala\\VendingMachine.scala 116:12]
      node _T_41 = eq(segReg, UInt<2>("h3")) @[\\src\\main\\scala\\VendingMachine.scala 117:17]
      when _T_41 : @[\\src\\main\\scala\\VendingMachine.scala 117:26]
        segReg <= UInt<1>("h0") @[\\src\\main\\scala\\VendingMachine.scala 118:14]
      else :
        node _segReg_T = add(segReg, UInt<1>("h1")) @[\\src\\main\\scala\\VendingMachine.scala 120:24]
        node _segReg_T_1 = tail(_segReg_T, 1) @[\\src\\main\\scala\\VendingMachine.scala 120:24]
        segReg <= _segReg_T_1 @[\\src\\main\\scala\\VendingMachine.scala 120:14]
    wire m : UInt<8>[4] @[\\src\\main\\scala\\VendingMachine.scala 124:15]
    reg muxOut1 : UInt<4>, clock with :
      reset => (reset, UInt<4>("h0")) @[\\src\\main\\scala\\VendingMachine.scala 125:25]
    when io.alarm : @[\\src\\main\\scala\\VendingMachine.scala 127:19]
      m[0] <= UInt<4>("ha") @[\\src\\main\\scala\\VendingMachine.scala 128:10]
      m[1] <= UInt<4>("hb") @[\\src\\main\\scala\\VendingMachine.scala 129:10]
      m[2] <= UInt<4>("hc") @[\\src\\main\\scala\\VendingMachine.scala 130:10]
      m[3] <= UInt<4>("hd") @[\\src\\main\\scala\\VendingMachine.scala 131:10]
      node _muxOut1_T = bits(segReg, 1, 0)
      muxOut1 <= m[_muxOut1_T] @[\\src\\main\\scala\\VendingMachine.scala 132:13]
    else :
      m[0] <= secondSumDigit @[\\src\\main\\scala\\VendingMachine.scala 134:10]
      m[1] <= firstSumDigit @[\\src\\main\\scala\\VendingMachine.scala 135:10]
      m[2] <= secondPriceDigit @[\\src\\main\\scala\\VendingMachine.scala 136:10]
      m[3] <= firstPriceDigit @[\\src\\main\\scala\\VendingMachine.scala 137:10]
      node _muxOut1_T_1 = bits(segReg, 1, 0)
      muxOut1 <= m[_muxOut1_T_1] @[\\src\\main\\scala\\VendingMachine.scala 138:13]
    wire g : UInt<8>[4] @[\\src\\main\\scala\\VendingMachine.scala 141:15]
    g[0] <= UInt<4>("h8") @[\\src\\main\\scala\\VendingMachine.scala 142:8]
    g[1] <= UInt<3>("h4") @[\\src\\main\\scala\\VendingMachine.scala 143:8]
    g[2] <= UInt<2>("h2") @[\\src\\main\\scala\\VendingMachine.scala 144:8]
    g[3] <= UInt<1>("h1") @[\\src\\main\\scala\\VendingMachine.scala 145:8]
    node _io_an_T = bits(segReg, 1, 0)
    node _io_an_T_1 = not(g[_io_an_T]) @[\\src\\main\\scala\\VendingMachine.scala 146:12]
    io.an <= _io_an_T_1 @[\\src\\main\\scala\\VendingMachine.scala 146:9]
    node _T_42 = eq(UInt<1>("h0"), muxOut1) @[\\src\\main\\scala\\VendingMachine.scala 148:19]
    when _T_42 : @[\\src\\main\\scala\\VendingMachine.scala 148:19]
      sevSeg <= UInt<6>("h3f") @[\\src\\main\\scala\\VendingMachine.scala 149:29]
    else :
      node _T_43 = eq(UInt<1>("h1"), muxOut1) @[\\src\\main\\scala\\VendingMachine.scala 148:19]
      when _T_43 : @[\\src\\main\\scala\\VendingMachine.scala 148:19]
        sevSeg <= UInt<3>("h6") @[\\src\\main\\scala\\VendingMachine.scala 150:29]
      else :
        node _T_44 = eq(UInt<2>("h2"), muxOut1) @[\\src\\main\\scala\\VendingMachine.scala 148:19]
        when _T_44 : @[\\src\\main\\scala\\VendingMachine.scala 148:19]
          sevSeg <= UInt<7>("h5b") @[\\src\\main\\scala\\VendingMachine.scala 151:29]
        else :
          node _T_45 = eq(UInt<2>("h3"), muxOut1) @[\\src\\main\\scala\\VendingMachine.scala 148:19]
          when _T_45 : @[\\src\\main\\scala\\VendingMachine.scala 148:19]
            sevSeg <= UInt<7>("h4f") @[\\src\\main\\scala\\VendingMachine.scala 152:29]
          else :
            node _T_46 = eq(UInt<3>("h4"), muxOut1) @[\\src\\main\\scala\\VendingMachine.scala 148:19]
            when _T_46 : @[\\src\\main\\scala\\VendingMachine.scala 148:19]
              sevSeg <= UInt<7>("h66") @[\\src\\main\\scala\\VendingMachine.scala 153:29]
            else :
              node _T_47 = eq(UInt<3>("h5"), muxOut1) @[\\src\\main\\scala\\VendingMachine.scala 148:19]
              when _T_47 : @[\\src\\main\\scala\\VendingMachine.scala 148:19]
                sevSeg <= UInt<7>("h6d") @[\\src\\main\\scala\\VendingMachine.scala 154:29]
              else :
                node _T_48 = eq(UInt<3>("h6"), muxOut1) @[\\src\\main\\scala\\VendingMachine.scala 148:19]
                when _T_48 : @[\\src\\main\\scala\\VendingMachine.scala 148:19]
                  sevSeg <= UInt<7>("h7d") @[\\src\\main\\scala\\VendingMachine.scala 155:29]
                else :
                  node _T_49 = eq(UInt<3>("h7"), muxOut1) @[\\src\\main\\scala\\VendingMachine.scala 148:19]
                  when _T_49 : @[\\src\\main\\scala\\VendingMachine.scala 148:19]
                    sevSeg <= UInt<3>("h7") @[\\src\\main\\scala\\VendingMachine.scala 156:29]
                  else :
                    node _T_50 = eq(UInt<4>("h8"), muxOut1) @[\\src\\main\\scala\\VendingMachine.scala 148:19]
                    when _T_50 : @[\\src\\main\\scala\\VendingMachine.scala 148:19]
                      sevSeg <= UInt<7>("h7f") @[\\src\\main\\scala\\VendingMachine.scala 157:29]
                    else :
                      node _T_51 = eq(UInt<4>("h9"), muxOut1) @[\\src\\main\\scala\\VendingMachine.scala 148:19]
                      when _T_51 : @[\\src\\main\\scala\\VendingMachine.scala 148:19]
                        sevSeg <= UInt<7>("h67") @[\\src\\main\\scala\\VendingMachine.scala 158:29]
                      else :
                        node _T_52 = eq(UInt<4>("ha"), muxOut1) @[\\src\\main\\scala\\VendingMachine.scala 148:19]
                        when _T_52 : @[\\src\\main\\scala\\VendingMachine.scala 148:19]
                          sevSeg <= UInt<7>("h71") @[\\src\\main\\scala\\VendingMachine.scala 160:29]
                        else :
                          node _T_53 = eq(UInt<4>("hb"), muxOut1) @[\\src\\main\\scala\\VendingMachine.scala 148:19]
                          when _T_53 : @[\\src\\main\\scala\\VendingMachine.scala 148:19]
                            sevSeg <= UInt<7>("h79") @[\\src\\main\\scala\\VendingMachine.scala 161:29]
                          else :
                            node _T_54 = eq(UInt<4>("hc"), muxOut1) @[\\src\\main\\scala\\VendingMachine.scala 148:19]
                            when _T_54 : @[\\src\\main\\scala\\VendingMachine.scala 148:19]
                              sevSeg <= UInt<5>("h1f") @[\\src\\main\\scala\\VendingMachine.scala 162:29]
                            else :
                              node _T_55 = eq(UInt<4>("hd"), muxOut1) @[\\src\\main\\scala\\VendingMachine.scala 148:19]
                              when _T_55 : @[\\src\\main\\scala\\VendingMachine.scala 148:19]
                                sevSeg <= UInt<6>("h38") @[\\src\\main\\scala\\VendingMachine.scala 163:29]
    node _io_seg_T = not(sevSeg) @[\\src\\main\\scala\\VendingMachine.scala 166:13]
    io.seg <= _io_seg_T @[\\src\\main\\scala\\VendingMachine.scala 166:10]

